[package]
name = "cw-proposal-multiple"
version = "0.1.0"
authors = ["janitachalam <janitachalam@gmail.com>"]
edition = "2018"

exclude = [
  # Those files are rust-optimizer artifacts. You might want to commit them for convenience but they should not be part of the source code publication.
  "contract.wasm",
  "hash.txt",
]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[features]
# for more explicit tests, cargo test --features=backtraces
backtraces = ["cosmwasm-std/backtraces"]
# use library feature to disable all instantiate/execute/query exports
library = []

[package.metadata.scripts]
optimize = """docker run --rm -v "$(pwd)":/code \
  --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \
  --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
  cosmwasm/rust-optimizer:0.12.5
"""

[dependencies]
cw-utils = {  version = "0.12" }
cw2 = { version = "0.13" }
cw3 = { version = "0.11" }
cw20 = "0.11"
cw20-base = {  version = "0.11", features = ["library"] }
stake-cw20 = { path = "../stake-cw20" }
cw-storage-plus = {  version = "0.12" }
cosmwasm-std = { version = "1.0.0-beta" }
schemars = "0.8.8"
serde = { version = "1.0.132", default-features = false, features = ["derive"] }
thiserror = { version = "1.0.30" }
voting = { path = "../../packages/voting" }
cw-core = { path = "../cw-core", version = "0.1.0", features = ["library"] }
cw-core-macros = { version = "0.1.0", path = "../../packages/cw-core-macros" }
cw-core-interface = { version = "0.1.0", path = "../../packages/cw-core-interface" } 
proposal-hooks = { version = "0.1.0", path = "../../packages/proposal-hooks" }
vote-hooks = { version = "0.1.0", path = "../../packages/vote-hooks" }
indexable-hooks = { version = "0.1.0", path = "../../packages/indexable-hooks" }

[dev-dependencies]
cosmwasm-schema = { version = "1.0.0-beta5" }
cw-multi-test = {  version = "0.13" }